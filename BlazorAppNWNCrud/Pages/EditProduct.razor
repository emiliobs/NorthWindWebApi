@page "/EditProduct/{id}"

<h3>Edit Product</h3>
<hr />

<EditForm Model="@Product" OnValidSubmit="@EditProducts">

    <div class="form-group">
        <label>Name</label>
        <InputText placeholder="Product" class="form-control" @bind-Value="@Product.Name" />
    </div>

    <div class="form-group">
        <label>Unit Price</label>
        <InputNumber class="form-control" @bind-Value="@Product.UnitPrice" />
    </div>

    <div class="form-group">
        <label>Units In Stock</label>
        <InputNumber class="form-control" @bind-Value="@Product.UnitsInStock" />
    </div>


    <button type="submit" class="btn btn-primary">Save</button>
    <button class="btn btn-dark" @onclick="@Cancel">Cancel</button>


</EditForm>

@code {

    [Parameter]
    public string Id { get; set; }

    Product Product = new Product();

    protected async override Task OnInitializedAsync()
    {
        Product = await HttpClient.GetJsonAsync<Product>($"https://localhost:44329/products/{Convert.ToInt32(Id)}");
    }

    protected async Task EditProducts()
    {
        await HttpClient.SendJsonAsync(HttpMethod.Put, "https://localhost:44329/products/", Product);
        NavigationManager.NavigateTo("AllProducts", true);

    }

    void Cancel()
    {
        NavigationManager.NavigateTo("AllProducts");

    }

}
