@page "/EditProduct/{id}"

<h3>Edit Product</h3>
<hr />

<div class="row">
    <div class="col-md-4">
        <form>
            <input placeholder="Product" class="form-control" @bind="Product.Id" hidden="hidden" />
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <input placeholder="Product" class="form-control" @bind="Product.Name" />
            </div>
            <div class="form-group">
                <label for="UnitPrice" class="control-label">Unit Price</label>
                <input type="number" class="form-control" @bind="Product.UnitPrice" />
            </div>
            <div class="form-group">
                <label for="UnitsInStocks" class="control-label">Units In Stock</label>
                <input type="number" class="form-control" @bind="Product.UnitsInStock" />
            </div>
            <div class="form-group">
                <button type="submit" class="btn btn-primary" @onclick="@(async () => await EditProducts())">Edit</button>
                <button class="btn btn-dark" @onclick="@Cancel">Cancel</button>
            </div>
        </form>
    </div>
</div>

@code {

    [Parameter]
    public string Id { get; set; }

    Product Product = new Product();

    protected async override Task OnInitializedAsync()
    {
        Product = await HttpClient.GetJsonAsync<Product>("https://localhost:44329/products/" + Convert.ToInt32(Id));
    }

    protected async Task EditProducts()
    {
        await HttpClient.SendJsonAsync(HttpMethod.Put, "https://localhost:44329/products/", Product);
        NavigationManager.NavigateTo("AllProducts");

    }

    void Cancel()
    {
        NavigationManager.NavigateTo("AllProducts");

    }

}
